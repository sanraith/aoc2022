// --- This file was auto-generated by build.rs ---

use crate::util::YearDay;
use once_cell::sync::Lazy;
use std::{str, collections::HashMap};

__INPUT_BYTE_DEFINITIONS__

pub static INPUT_MAP: Lazy<HashMap<YearDay, String>> = Lazy::new(create_input_map);

fn from_utf8(data: &'static [u8]) -> String {
    str::from_utf8(data)
        .expect("input should be valid utf-8")
        .to_string()
}

fn create_input_map() -> HashMap<YearDay, String> {
    let mut map = HashMap::new();
    map.insert(YearDay::new(2021, 1), from_utf8(INPUT_YEAR_2021_DAY_01));
    map.insert(YearDay::new(2021, 12), from_utf8(INPUT_YEAR_2021_DAY_12));

    map
}

pub fn get(year_day: &YearDay) -> Option<&String> {
    INPUT_MAP.get(year_day)
}
